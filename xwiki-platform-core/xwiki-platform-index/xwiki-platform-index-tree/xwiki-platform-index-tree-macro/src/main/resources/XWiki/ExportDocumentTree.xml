<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.3" reference="XWiki.ExportDocumentTree" locale="">
  <web>XWiki</web>
  <name>ExportDocumentTree</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <parent>XWiki.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <version>1.1</version>
  <title/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity}}
#if ($xcontext.action != 'get')
  {{html clean="false"}}
  #template('export_macros.vm')
  #exportTreeSelector({
    'filter': 'pristineInstalledExtensionDocument',
    'root': "wiki:$xcontext.database"
  })
  {{/html}}
#end
{{/velocity}}

{{velocity}}
#if ($xcontext.action == 'get')
  {{include reference="XWiki.DocumentTreeMacros" /}}
#end
{{/velocity}}

{{velocity output="false"}}
#macro (postProcessDocumentTreeData $data)
  #if ($request.data == 'children')
    ## Change the icons in order to be able to differentiate content pages from extension pages and from customized
    ## extension pages.
    #foreach ($node in $data)
      #if ($node.data.type == 'document')
        #set ($documentReference = $services.model.resolveDocument($node.data.id))
        #set ($iconName = 'file-text')
        #set ($iconStyle = 'text-success')
        #if ($services.extension.xar.isExtensionDocument($documentReference))
          #if ($services.extension.xar.isCustomizedExtensionDocument($documentReference))
            #set ($iconName = 'file-code')
            #set ($iconStyle = 'text-warning')
            #if ($services.extension.xar.isEditAllowed($documentReference))
              ## Distinguish safe modifications (e.g. configuration) from unsafe modifications (code).
              #set ($iconStyle = 'text-success')
            #end
            #if ($request.filters == 'installedExtensionDocument')
              ## This node is visible probably because it has some child content pages, but the user should not be able
              ## to select it with the current filter.
              #set ($node.state = {'disabled': true, 'undetermined': true})
            #end
          #else
            #set ($iconName = 'file-white')
            #set ($iconStyle = 'text-danger')
            #if ($request.filters == 'pristineInstalledExtensionDocument'
                || $request.filters == 'installedExtensionDocument')
              ## This node is visible probably because it has some child content pages or child customized extension
              ## pages, but the user should not be able to select it with the current filter.
              #set ($node.state = {'disabled': true, 'undetermined': true})
            #end
          #end
          ## Show the extension name and id as a tool tip for the tree node.
          #set ($installedExtensions = $services.extension.xar.getInstalledExtensions($documentReference))
          #set ($tooltip = [])
          #foreach ($installedExtension in $installedExtensions)
            #set ($discard = $tooltip.add("$installedExtension.name ($installedExtension.id)"))
          #end
          #if ($tooltip.size() &gt; 0)
            #set ($node.a_attr.title = $stringtool.join($tooltip, ', '))
          #end
        #end
        #set ($iconMetaData = $services.icon.getMetaData($iconName))
        #if ($iconMetaData.iconSetType == 'IMAGE')
          #set ($node.icon = $iconMetaData.url)
        #elseif ($iconMetaData.iconSetType == 'FONT')
          #set ($node.icon = "$iconMetaData.cssClass $iconStyle")
        #end
      #elseif ($node.data.type == 'empty')
        #set ($node.state = {'disabled': true, 'selected': false})
        #set ($node.a_attr = {'class': 'jstree-no-checkboxes'})
      #end
    #end
  #end
#end
{{/velocity}}

{{velocity}}
#if ($xcontext.action == 'get')
  #updateDocTreeConfigFromRequest
  #handleDocumentTreeRequest
#end
{{/velocity}}</content>
</xwikidoc>
